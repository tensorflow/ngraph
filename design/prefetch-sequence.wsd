@startuml 
hide footbox
title Prefetch Data

skinparam backgroundColor #EEEEFFFF
skinparam handwritten false

skinparam sequence {
	ArrowColor DeepSkyBlue
	ActorBorderColor DeepSkyBlue
	LifeLineBorderColor blue
	LifeLineBackgroundColor #A9DCDF
	
	ParticipantBorderColor DeepSkyBlue
	ParticipantBackgroundColor DodgerBlue
	ParticipantFontName Impact
	ParticipantFontSize 17
	ParticipantFontColor #A9DCDF
	
	ActorBackgroundColor aqua
	ActorFontColor DeepSkyBlue
	ActorFontSize 17
	ActorFontName Aapex
}

 == IteratorGetNext Op Execution ==

PrefetchThread -> PrefetchThread : cond_var_.wait(lock)

IteratorGetNext -> Dataset : GetNextInternal(out_tensors)
activate IteratorGetNext
activate Dataset

Dataset -> Dataset : Consume(out_tensors)\n1. Pull out the tensor \n2. Notify waiters
activate Dataset
Dataset --> PrefetchThread : cv.notify_all()\nWaiting finishes. \nThread wakes up
deactivate Dataset
deactivate Dataset
deactivate IteratorGetNext

PrefetchThread -> InputDataSet : GetNext()\nGets the data from the producer
activate PrefetchThread

PrefetchThread -> ContextMgr : Lookup(NGraphPrefetchSharedResouce,...) 
PrefetchThread -> NGraphPrefetchSharedResouce : GetNextIoTensorsForDeviceTransfer()
PrefetchThread -> NGTensor : write(host_src_ptr, ...)
PrefetchThread -> NGraphPrefetchSharedResouce : AddNextIoTensorsReadyForDeviceExecution()

PrefetchThread -> PrefetchThread : buffer_.push_back(Tensor)

deactivate PrefetchThread

@enduml
