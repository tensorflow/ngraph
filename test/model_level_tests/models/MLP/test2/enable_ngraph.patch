diff --git a/examples/mnist_cnn.py b/examples/mnist_cnn.py
index 25aa07b6..97090b01 100644
--- a/examples/mnist_cnn.py
+++ b/examples/mnist_cnn.py
@@ -12,17 +12,27 @@ from keras.models import Sequential
 from keras.layers import Dense, Dropout, Flatten
 from keras.layers import Conv2D, MaxPooling2D
 from keras import backend as K
+import ngraph_bridge
+import tensorflow as tf
+
+from keras.backend.tensorflow_backend import set_session
+config = tf.ConfigProto()
+config = ngraph_bridge.update_config(config)
+sess = tf.Session(config=config)
+set_session(sess)
 
 batch_size = 128
 num_classes = 10
-epochs = 12
+epochs = 1
 
 # input image dimensions
 img_rows, img_cols = 28, 28
 
 # the data, split between train and test sets
 (x_train, y_train), (x_test, y_test) = mnist.load_data()
-
+max_samples = 1024
+y_train = y_train[:max_samples]
+y_test = y_test[:max_samples]
 if K.image_data_format() == 'channels_first':
     x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)
     x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)
@@ -31,6 +41,8 @@ else:
     x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)
     x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)
     input_shape = (img_rows, img_cols, 1)
+x_train = x_train[:max_samples, :, :, :]
+x_test = x_test[:max_samples, :, :, :]
 
 x_train = x_train.astype('float32')
 x_test = x_test.astype('float32')
