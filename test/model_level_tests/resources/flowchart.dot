digraph {
    label="Test framework"

    start -> done_all_test_suites;

 
    start[shape="box", style=rounded];
    end[shape="box", style=rounded];
    done_all_test_suites [shape="diamond", style="", color=red];
    done_all_test_suites -> end[label="yes"];

    test_suite_disabled[shape="diamond", style=""]
    test_suite_disabled->done_all_test_suites[label="yes"];


    done_all_sub_tests [shape="diamond", style="", color=blue];
    download_repo[shape="box", style=rounded, color=cyan]
    done_all_test_suites -> test_suite_disabled[label="no"];
    
    test_suite_disabled->download_repo[label="no"]


    getting_repo_ready_present[shape="diamond", style="",color=cyan];
    download_repo->getting_repo_ready_present

    get_repo_ready[shape="box", style=rounded , color=cyan]
    getting_repo_ready_present->get_repo_ready[label="yes"];


    get_repo_ready->done_all_sub_tests
    getting_repo_ready_present->done_all_sub_tests[label="no"];

    cleanup_present[shape="diamond", style="", color=green]
        done_all_sub_tests -> cleanup_present[label="yes"]

    do_cleanup[shape="box", style=rounded, color=green]
    cleanup_present->do_cleanup[label="yes"];
    cleanup_present->done_all_test_suites[label="no"];
    do_cleanup->done_all_test_suites

    local_patch_present[shape="diamond", style=""]
    done_all_sub_tests -> sub_test_disabled[label="no"]


    sub_test_disabled[shape="diamond", style=""]


    sub_test_disabled->local_patch_present[label="no"];
    sub_test_disabled->done_all_sub_tests[label="yes"];

    apply_global_patch[shape="box", style=rounded]
    local_patch_present -> apply_global_patch[label="no"];
    apply_local_patch[shape="box", style=rounded]
    local_patch_present -> apply_local_patch[label="yes"];



    core_rewrite_test[shape="box", style=rounded]
    apply_local_patch -> core_rewrite_test;
    apply_global_patch -> core_rewrite_test;



    expected_present [shape="diamond", style=""];
    core_rewrite_test->expected_present
    expected_present -> done_all_sub_tests[label="no"];

    custom_log_parser_present [shape="diamond", style=""];
    expected_present -> custom_log_parser_present[label="yes"];

    default_log_parser[shape="box", style=rounded]
    custom_log_parser[shape="box", style=rounded]
    custom_log_parser_present->default_log_parser[label="no"];
    custom_log_parser_present->custom_log_parser[label="yes"];

    match[shape="box", style=rounded]
    custom_log_parser->match
    default_log_parser->match
    match->done_all_sub_tests
}